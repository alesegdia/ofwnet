// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: netmsg.proto

#ifndef PROTOBUF_netmsg_2eproto__INCLUDED
#define PROTOBUF_netmsg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_netmsg_2eproto();
void protobuf_AssignDesc_netmsg_2eproto();
void protobuf_ShutdownFile_netmsg_2eproto();

class player_msg;

// ===================================================================

class player_msg : public ::google::protobuf::Message {
 public:
  player_msg();
  virtual ~player_msg();
  
  player_msg(const player_msg& from);
  
  inline player_msg& operator=(const player_msg& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const player_msg& default_instance();
  
  void Swap(player_msg* other);
  
  // implements Message ----------------------------------------------
  
  player_msg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const player_msg& from);
  void MergeFrom(const player_msg& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // required int32 pos_x = 2;
  inline bool has_pos_x() const;
  inline void clear_pos_x();
  static const int kPosXFieldNumber = 2;
  inline ::google::protobuf::int32 pos_x() const;
  inline void set_pos_x(::google::protobuf::int32 value);
  
  // required int32 pos_y = 3;
  inline bool has_pos_y() const;
  inline void clear_pos_y();
  static const int kPosYFieldNumber = 3;
  inline ::google::protobuf::int32 pos_y() const;
  inline void set_pos_y(::google::protobuf::int32 value);
  
  // optional int32 height = 4;
  inline bool has_height() const;
  inline void clear_height();
  static const int kHeightFieldNumber = 4;
  inline ::google::protobuf::int32 height() const;
  inline void set_height(::google::protobuf::int32 value);
  
  // optional int32 width = 5;
  inline bool has_width() const;
  inline void clear_width();
  static const int kWidthFieldNumber = 5;
  inline ::google::protobuf::int32 width() const;
  inline void set_width(::google::protobuf::int32 value);
  
  // optional int32 mesh = 6;
  inline bool has_mesh() const;
  inline void clear_mesh();
  static const int kMeshFieldNumber = 6;
  inline ::google::protobuf::int32 mesh() const;
  inline void set_mesh(::google::protobuf::int32 value);
  
  // optional int32 texture = 7;
  inline bool has_texture() const;
  inline void clear_texture();
  static const int kTextureFieldNumber = 7;
  inline ::google::protobuf::int32 texture() const;
  inline void set_texture(::google::protobuf::int32 value);
  
  // optional int32 life = 8;
  inline bool has_life() const;
  inline void clear_life();
  static const int kLifeFieldNumber = 8;
  inline ::google::protobuf::int32 life() const;
  inline void set_life(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:player_msg)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_pos_x();
  inline void clear_has_pos_x();
  inline void set_has_pos_y();
  inline void clear_has_pos_y();
  inline void set_has_height();
  inline void clear_has_height();
  inline void set_has_width();
  inline void clear_has_width();
  inline void set_has_mesh();
  inline void clear_has_mesh();
  inline void set_has_texture();
  inline void clear_has_texture();
  inline void set_has_life();
  inline void clear_has_life();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* name_;
  ::google::protobuf::int32 pos_x_;
  ::google::protobuf::int32 pos_y_;
  ::google::protobuf::int32 height_;
  ::google::protobuf::int32 width_;
  ::google::protobuf::int32 mesh_;
  ::google::protobuf::int32 texture_;
  ::google::protobuf::int32 life_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  friend void  protobuf_AddDesc_netmsg_2eproto();
  friend void protobuf_AssignDesc_netmsg_2eproto();
  friend void protobuf_ShutdownFile_netmsg_2eproto();
  
  void InitAsDefaultInstance();
  static player_msg* default_instance_;
};
// ===================================================================


// ===================================================================

// player_msg

// required string name = 1;
inline bool player_msg::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void player_msg::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void player_msg::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void player_msg::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& player_msg::name() const {
  return *name_;
}
inline void player_msg::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void player_msg::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void player_msg::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* player_msg::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* player_msg::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required int32 pos_x = 2;
inline bool player_msg::has_pos_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void player_msg::set_has_pos_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void player_msg::clear_has_pos_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void player_msg::clear_pos_x() {
  pos_x_ = 0;
  clear_has_pos_x();
}
inline ::google::protobuf::int32 player_msg::pos_x() const {
  return pos_x_;
}
inline void player_msg::set_pos_x(::google::protobuf::int32 value) {
  set_has_pos_x();
  pos_x_ = value;
}

// required int32 pos_y = 3;
inline bool player_msg::has_pos_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void player_msg::set_has_pos_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void player_msg::clear_has_pos_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void player_msg::clear_pos_y() {
  pos_y_ = 0;
  clear_has_pos_y();
}
inline ::google::protobuf::int32 player_msg::pos_y() const {
  return pos_y_;
}
inline void player_msg::set_pos_y(::google::protobuf::int32 value) {
  set_has_pos_y();
  pos_y_ = value;
}

// optional int32 height = 4;
inline bool player_msg::has_height() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void player_msg::set_has_height() {
  _has_bits_[0] |= 0x00000008u;
}
inline void player_msg::clear_has_height() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void player_msg::clear_height() {
  height_ = 0;
  clear_has_height();
}
inline ::google::protobuf::int32 player_msg::height() const {
  return height_;
}
inline void player_msg::set_height(::google::protobuf::int32 value) {
  set_has_height();
  height_ = value;
}

// optional int32 width = 5;
inline bool player_msg::has_width() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void player_msg::set_has_width() {
  _has_bits_[0] |= 0x00000010u;
}
inline void player_msg::clear_has_width() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void player_msg::clear_width() {
  width_ = 0;
  clear_has_width();
}
inline ::google::protobuf::int32 player_msg::width() const {
  return width_;
}
inline void player_msg::set_width(::google::protobuf::int32 value) {
  set_has_width();
  width_ = value;
}

// optional int32 mesh = 6;
inline bool player_msg::has_mesh() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void player_msg::set_has_mesh() {
  _has_bits_[0] |= 0x00000020u;
}
inline void player_msg::clear_has_mesh() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void player_msg::clear_mesh() {
  mesh_ = 0;
  clear_has_mesh();
}
inline ::google::protobuf::int32 player_msg::mesh() const {
  return mesh_;
}
inline void player_msg::set_mesh(::google::protobuf::int32 value) {
  set_has_mesh();
  mesh_ = value;
}

// optional int32 texture = 7;
inline bool player_msg::has_texture() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void player_msg::set_has_texture() {
  _has_bits_[0] |= 0x00000040u;
}
inline void player_msg::clear_has_texture() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void player_msg::clear_texture() {
  texture_ = 0;
  clear_has_texture();
}
inline ::google::protobuf::int32 player_msg::texture() const {
  return texture_;
}
inline void player_msg::set_texture(::google::protobuf::int32 value) {
  set_has_texture();
  texture_ = value;
}

// optional int32 life = 8;
inline bool player_msg::has_life() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void player_msg::set_has_life() {
  _has_bits_[0] |= 0x00000080u;
}
inline void player_msg::clear_has_life() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void player_msg::clear_life() {
  life_ = 0;
  clear_has_life();
}
inline ::google::protobuf::int32 player_msg::life() const {
  return life_;
}
inline void player_msg::set_life(::google::protobuf::int32 value) {
  set_has_life();
  life_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_netmsg_2eproto__INCLUDED
